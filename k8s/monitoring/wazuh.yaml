---
# ConfigMap dla konfiguracji Wazuh
apiVersion: v1
kind: ConfigMap
metadata:
  name: wazuh-agent-config
  namespace: monitoring
data:
  ossec.conf: |
    <ossec_config>
      <client>
        <server>
          <address>wazuh-manager</address>
          <port>1514</port>
          <protocol>udp</protocol>
        </server>
        <crypto_method>aes</crypto_method>
        <auto_restart>yes</auto_restart>
        <time-reconnect>60</time-reconnect>
      </client>
      
      <syscheck>
        <disabled>no</disabled>
        <frequency>43200</frequency>
        <scan_on_start>yes</scan_on_start>
        <directories check_all="yes" report_changes="yes" realtime="yes">/etc,/usr/bin,/usr/sbin</directories>
        <directories check_all="yes" report_changes="yes" realtime="yes">/bin,/sbin</directories>
        <directories check_all="yes" report_changes="yes">/var/log</directories>
        <ignore>/etc/mtab</ignore>
        <ignore>/etc/hosts.deny</ignore>
        <ignore>/etc/mail/statistics</ignore>
        <ignore>/etc/random-seed</ignore>
        <ignore>/etc/random.seed</ignore>
        <ignore>/etc/adjtime</ignore>
        <ignore>/etc/httpd/logs</ignore>
        <ignore>/etc/utmpx</ignore>
        <ignore>/etc/wtmpx</ignore>
        <ignore>/etc/cups/certs</ignore>
        <ignore>/etc/dumpdates</ignore>
        <ignore>/etc/svc/volatile</ignore>
      </syscheck>

      <rootcheck>
        <disabled>no</disabled>
        <check_unixaudit>yes</check_unixaudit>
        <check_files>yes</check_files>
        <check_trojans>yes</check_trojans>
        <check_dev>yes</check_dev>
        <check_sys>yes</check_sys>
        <check_pids>yes</check_pids>
        <check_ports>yes</check_ports>
        <check_if>yes</check_if>
        <frequency>43200</frequency>
        <rootkit_files>/var/ossec/etc/rootcheck/rootkit_files.txt</rootkit_files>
        <rootkit_trojans>/var/ossec/etc/rootcheck/rootkit_trojans.txt</rootkit_trojans>
        <skip_nfs>yes</skip_nfs>
      </rootcheck>

      <wodle name="syscollector">
        <disabled>no</disabled>
        <interval>1h</interval>
        <scan_on_start>yes</scan_on_start>
        <hardware>yes</hardware>
        <os>yes</os>
        <network>yes</network>
        <packages>yes</packages>
        <ports all="no">yes</ports>
        <processes>yes</processes>
      </wodle>

      <wodle name="osquery">
        <disabled>yes</disabled>
        <run_daemon>yes</run_daemon>
        <log_path>/var/log/osquery/osqueryd.results.log</log_path>
        <config_path>/etc/osquery/osquery.conf</config_path>
        <add_labels>yes</add_labels>
      </wodle>

      <active-response>
        <disabled>no</disabled>
        <ca_store>/var/ossec/etc/wpk_root.pem</ca_store>
        <ca_verification>yes</ca_verification>
      </active-response>

      <logging>
        <log_format>plain</log_format>
      </logging>
    </ossec_config>

---
# Service dla Wazuh Manager
apiVersion: v1
kind: Service
metadata:
  name: wazuh-manager
  namespace: monitoring
spec:
  selector:
    app: wazuh-manager
  ports:
  - name: agent-connection
    port: 1514
    protocol: UDP
  - name: registration
    port: 1515
    protocol: TCP
  - name: api
    port: 55000
    protocol: TCP
  type: ClusterIP

---
# Deployment dla Wazuh Manager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wazuh-manager
  namespace: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: wazuh-manager
  template:
    metadata:
      labels:
        app: wazuh-manager
    spec:
      containers:
      - name: wazuh-manager
        image: wazuh/wazuh-manager:4.3.10
        ports:
        - containerPort: 1514
          protocol: UDP
        - containerPort: 1515
          protocol: TCP
        - containerPort: 55000
          protocol: TCP
        resources:
          limits:
            cpu: "1"
            memory: "1Gi"
          requests:
            cpu: "500m"
            memory: "512Mi"
        volumeMounts:
        - name: wazuh-manager-config
          mountPath: /var/ossec/etc/ossec.conf
          subPath: ossec.conf
        - name: wazuh-manager-data
          mountPath: /var/ossec/data
      volumes:
      - name: wazuh-manager-config
        configMap:
          name: wazuh-manager-config
          items:
          - key: ossec.conf
            path: ossec.conf
      - name: wazuh-manager-data
        emptyDir: {}

---
# DaemonSet dla Wazuh Agent (na każdym węźle)
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: wazuh-agent
  namespace: monitoring
spec:
  selector:
    matchLabels:
      app: wazuh-agent
  template:
    metadata:
      labels:
        app: wazuh-agent
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: wazuh-agent
        image: wazuh/wazuh-agent:4.3.10
        securityContext:
          privileged: true
        env:
        - name: WAZUH_MANAGER
          value: "wazuh-manager"
        volumeMounts:
        - name: wazuh-agent-config
          mountPath: /var/ossec/etc/ossec.conf
          subPath: ossec.conf
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: etc
          mountPath: /etc
          readOnly: true
        - name: proc
          mountPath: /proc
          readOnly: true
        - name: dockersocket
          mountPath: /var/run/docker.sock
          readOnly: true
      volumes:
      - name: wazuh-agent-config
        configMap:
          name: wazuh-agent-config
          items:
          - key: ossec.conf
            path: ossec.conf
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: etc
        hostPath:
          path: /etc
      - name: proc
        hostPath:
          path: /proc
      - name: dockersocket
        hostPath:
          path: /var/run/docker.sock

---
# ConfigMap dla Wazuh Manager
apiVersion: v1
kind: ConfigMap
metadata:
  name: wazuh-manager-config
  namespace: monitoring
data:
  ossec.conf: |
    <ossec_config>
      <global>
        <jsonout_output>yes</jsonout_output>
        <alerts_log>yes</alerts_log>
        <logall>no</logall>
        <logall_json>no</logall_json>
        <email_notification>no</email_notification>
        <smtp_server>smtp.example.wazuh.com</smtp_server>
        <email_from>ossecm@example.wazuh.com</email_from>
        <email_to>recipient@example.wazuh.com</email_to>
        <email_maxperhour>12</email_maxperhour>
        <email_log_source>alerts.log</email_log_source>
        <agents_disconnection_time>10m</agents_disconnection_time>
        <agents_disconnection_alert_time>0</agents_disconnection_alert_time>
      </global>

      <alerts>
        <log_alert_level>3</log_alert_level>
        <email_alert_level>12</email_alert_level>
      </alerts>

      <!-- Honeypot specific rules and decoders -->
      <ruleset>
        <decoder_dir>etc/decoders</decoder_dir>
        <rule_dir>etc/rules</rule_dir>
        <rule_exclude>0215-policy_rules.xml</rule_exclude>
        <list>etc/lists/audit-keys</list>
        <list>etc/lists/amazon/aws-eventnames</list>
        <list>etc/lists/security-eventchannel</list>

        <!-- Honeypot specific rule files -->
        <rule_dir>etc/honeypot-rules</rule_dir>
      </ruleset>

      <remote>
        <connection>secure</connection>
        <port>1514</port>
        <protocol>udp</protocol>
        <queue_size>131072</queue_size>
      </remote>

      <syscheck>
        <disabled>no</disabled>
        <frequency>43200</frequency>
        <scan_on_start>yes</scan_on_start>
        <directories check_all="yes" report_changes="yes" realtime="yes">/etc,/usr/bin,/usr/sbin</directories>
        <directories check_all="yes" report_changes="yes" realtime="yes">/bin,/sbin</directories>
        <directories check_all="yes" report_changes="yes">/var/ossec/etc</directories>
        <ignore>/etc/mtab</ignore>
        <ignore>/etc/hosts.deny</ignore>
        <ignore>/etc/mail/statistics</ignore>
        <ignore>/etc/random-seed</ignore>
        <ignore>/etc/random.seed</ignore>
        <ignore>/etc/adjtime</ignore>
        <ignore>/etc/httpd/logs</ignore>
      </syscheck>

      <rootcheck>
        <disabled>no</disabled>
        <check_unixaudit>yes</check_unixaudit>
        <check_files>yes</check_files>
        <check_trojans>yes</check_trojans>
        <check_dev>yes</check_dev>
        <check_sys>yes</check_sys>
        <check_pids>yes</check_pids>
        <check_ports>yes</check_ports>
        <check_if>yes</check_if>
        <frequency>43200</frequency>
        <rootkit_files>/var/ossec/etc/rootcheck/rootkit_files.txt</rootkit_files>
        <rootkit_trojans>/var/ossec/etc/rootcheck/rootkit_trojans.txt</rootkit_trojans>
        <skip_nfs>yes</skip_nfs>
      </rootcheck>

      <logging>
        <log_format>plain</log_format>
      </logging>
    </ossec_config>